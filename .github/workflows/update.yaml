name: Update

on:
  label:
    types:
      - created
  schedule:
    - cron: '30 16 * * 0-4'

permissions:
  contents: write
  issues: write

jobs:
  update_daily_papers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Update papers
        run: |
          python main.py

      - name: Configure git user
        run: |
          git config user.name "Zezhishao"
          git config user.email "864453277@qq.com"

      - name: Ensure commits and rebase onto origin/master
        id: commit_step
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # add and commit generated files (adjust paths as needed)
          git add README.md .github/ISSUE_TEMPLATE.md || true
          # if there are no changes, exit gracefully
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "has_changes=true" >> $GITHUB_OUTPUT
          git commit -m "✏️ Update papers automatically." || { echo "commit failed"; exit 1; }

          # fetch latest remote master and rebase our commit(s) onto it
          git fetch origin master --prune
          # try to rebase; if conflict, abort and fail workflow so you can inspect
          if ! git rebase origin/master; then
            echo "Rebase conflict, aborting. Review manually."
            git rebase --abort
            exit 1
          fi

      - name: Push changes (safe)
        if: steps.commit_step.outputs.has_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 默认安全推送（fast-forward 或 rebase 后的推送）
          git push --follow-tags origin master

      - name: Create an issue to notify
        if: steps.commit_step.outputs.has_changes == 'true'
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
